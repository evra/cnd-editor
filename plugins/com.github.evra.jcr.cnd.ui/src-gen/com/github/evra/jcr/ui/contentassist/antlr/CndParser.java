/*
* generated by Xtext
*/
package com.github.evra.jcr.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.github.evra.jcr.services.CndGrammarAccess;

public class CndParser extends AbstractContentAssistParser {
	
	@Inject
	private CndGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.github.evra.jcr.ui.contentassist.antlr.internal.InternalCndParser createParser() {
		com.github.evra.jcr.ui.contentassist.antlr.internal.InternalCndParser result = new com.github.evra.jcr.ui.contentassist.antlr.internal.InternalCndParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModelAccess().getAlternatives(), "rule__Model__Alternatives");
					put(grammarAccess.getNodeTypeDefinitionAccess().getAlternatives_4_5_0(), "rule__NodeTypeDefinition__Alternatives_4_5_0");
					put(grammarAccess.getNodeTypeDefinitionAccess().getAlternatives_5(), "rule__NodeTypeDefinition__Alternatives_5");
					put(grammarAccess.getNodeDefinitionAccess().getAlternatives_1(), "rule__NodeDefinition__Alternatives_1");
					put(grammarAccess.getSnsAccess().getAlternatives(), "rule__Sns__Alternatives");
					put(grammarAccess.getPropertyDefinitionAccess().getAlternatives_2(), "rule__PropertyDefinition__Alternatives_2");
					put(grammarAccess.getNoQueryOrderAccess().getAlternatives(), "rule__NoQueryOrder__Alternatives");
					put(grammarAccess.getNoFullTextAccess().getAlternatives(), "rule__NoFullText__Alternatives");
					put(grammarAccess.getQueryOpsAccess().getAlternatives_0(), "rule__QueryOps__Alternatives_0");
					put(grammarAccess.getMultipleAccess().getAlternatives(), "rule__Multiple__Alternatives");
					put(grammarAccess.getProtectedAccess().getAlternatives(), "rule__Protected__Alternatives");
					put(grammarAccess.getMandatoryAccess().getAlternatives(), "rule__Mandatory__Alternatives");
					put(grammarAccess.getAutocreatedAccess().getAlternatives(), "rule__Autocreated__Alternatives");
					put(grammarAccess.getPrimaryAccess().getAlternatives(), "rule__Primary__Alternatives");
					put(grammarAccess.getQueryableAccess().getAlternatives(), "rule__Queryable__Alternatives");
					put(grammarAccess.getNotqueryableAccess().getAlternatives(), "rule__Notqueryable__Alternatives");
					put(grammarAccess.getAbstractAccess().getAlternatives(), "rule__Abstract__Alternatives");
					put(grammarAccess.getMixinAccess().getAlternatives(), "rule__Mixin__Alternatives");
					put(grammarAccess.getOrderableAccess().getAlternatives(), "rule__Orderable__Alternatives");
					put(grammarAccess.getJcrStringAccess().getAlternatives(), "rule__JcrString__Alternatives");
					put(grammarAccess.getXiDAccess().getAlternatives(), "rule__XiD__Alternatives");
					put(grammarAccess.getOpvAccess().getAlternatives(), "rule__Opv__Alternatives");
					put(grammarAccess.getPropertyTypeAccess().getAlternatives(), "rule__PropertyType__Alternatives");
					put(grammarAccess.getNodeTypeDefinitionAccess().getGroup(), "rule__NodeTypeDefinition__Group__0");
					put(grammarAccess.getNodeTypeDefinitionAccess().getGroup_3(), "rule__NodeTypeDefinition__Group_3__0");
					put(grammarAccess.getNodeTypeDefinitionAccess().getGroup_3_2(), "rule__NodeTypeDefinition__Group_3_2__0");
					put(grammarAccess.getNodeTypeDefinitionAccess().getGroup_4_5(), "rule__NodeTypeDefinition__Group_4_5__0");
					put(grammarAccess.getNodeDefinitionAccess().getGroup(), "rule__NodeDefinition__Group__0");
					put(grammarAccess.getNodeDefinitionAccess().getGroup_2(), "rule__NodeDefinition__Group_2__0");
					put(grammarAccess.getNodeDefinitionAccess().getGroup_2_1(), "rule__NodeDefinition__Group_2_1__0");
					put(grammarAccess.getNodeDefinitionAccess().getGroup_2_1_1(), "rule__NodeDefinition__Group_2_1_1__0");
					put(grammarAccess.getNodeDefinitionAccess().getGroup_3(), "rule__NodeDefinition__Group_3__0");
					put(grammarAccess.getPropertyDefinitionAccess().getGroup(), "rule__PropertyDefinition__Group__0");
					put(grammarAccess.getPropertyDefinitionAccess().getGroup_3(), "rule__PropertyDefinition__Group_3__0");
					put(grammarAccess.getPropertyDefinitionAccess().getGroup_4(), "rule__PropertyDefinition__Group_4__0");
					put(grammarAccess.getPropertyDefinitionAccess().getGroup_4_1(), "rule__PropertyDefinition__Group_4_1__0");
					put(grammarAccess.getPropertyDefinitionAccess().getGroup_4_1_1(), "rule__PropertyDefinition__Group_4_1_1__0");
					put(grammarAccess.getPropertyDefinitionAccess().getGroup_6(), "rule__PropertyDefinition__Group_6__0");
					put(grammarAccess.getPropertyDefinitionAccess().getGroup_6_1(), "rule__PropertyDefinition__Group_6_1__0");
					put(grammarAccess.getPropertyDefinitionAccess().getGroup_6_1_1(), "rule__PropertyDefinition__Group_6_1_1__0");
					put(grammarAccess.getQueryOpsAccess().getGroup(), "rule__QueryOps__Group__0");
					put(grammarAccess.getNsMappingAccess().getGroup(), "rule__NsMapping__Group__0");
					put(grammarAccess.getModelAccess().getNamespacesAssignment_0(), "rule__Model__NamespacesAssignment_0");
					put(grammarAccess.getModelAccess().getNodeTypesAssignment_1(), "rule__Model__NodeTypesAssignment_1");
					put(grammarAccess.getNodeTypeDefinitionAccess().getNameAssignment_1(), "rule__NodeTypeDefinition__NameAssignment_1");
					put(grammarAccess.getNodeTypeDefinitionAccess().getDeclaredSupertypeNamesAssignment_3_1(), "rule__NodeTypeDefinition__DeclaredSupertypeNamesAssignment_3_1");
					put(grammarAccess.getNodeTypeDefinitionAccess().getDeclaredSupertypeNamesAssignment_3_2_1(), "rule__NodeTypeDefinition__DeclaredSupertypeNamesAssignment_3_2_1");
					put(grammarAccess.getNodeTypeDefinitionAccess().getOrderableAssignment_4_0(), "rule__NodeTypeDefinition__OrderableAssignment_4_0");
					put(grammarAccess.getNodeTypeDefinitionAccess().getMixinAssignment_4_1(), "rule__NodeTypeDefinition__MixinAssignment_4_1");
					put(grammarAccess.getNodeTypeDefinitionAccess().getAbstractAssignment_4_2(), "rule__NodeTypeDefinition__AbstractAssignment_4_2");
					put(grammarAccess.getNodeTypeDefinitionAccess().getQueryableAssignment_4_3(), "rule__NodeTypeDefinition__QueryableAssignment_4_3");
					put(grammarAccess.getNodeTypeDefinitionAccess().getNotqueryableAssignment_4_4(), "rule__NodeTypeDefinition__NotqueryableAssignment_4_4");
					put(grammarAccess.getNodeTypeDefinitionAccess().getPrimaryItemAssignment_4_5_1(), "rule__NodeTypeDefinition__PrimaryItemAssignment_4_5_1");
					put(grammarAccess.getNodeTypeDefinitionAccess().getDeclaredPropertyDefinitionsAssignment_5_0(), "rule__NodeTypeDefinition__DeclaredPropertyDefinitionsAssignment_5_0");
					put(grammarAccess.getNodeTypeDefinitionAccess().getDeclaredChildNodeDefinitionsAssignment_5_1(), "rule__NodeTypeDefinition__DeclaredChildNodeDefinitionsAssignment_5_1");
					put(grammarAccess.getNodeDefinitionAccess().getNameAssignment_1_0(), "rule__NodeDefinition__NameAssignment_1_0");
					put(grammarAccess.getNodeDefinitionAccess().getNameAssignment_1_1(), "rule__NodeDefinition__NameAssignment_1_1");
					put(grammarAccess.getNodeDefinitionAccess().getRequiredTypesAssignment_2_1_0(), "rule__NodeDefinition__RequiredTypesAssignment_2_1_0");
					put(grammarAccess.getNodeDefinitionAccess().getRequiredTypesAssignment_2_1_1_1(), "rule__NodeDefinition__RequiredTypesAssignment_2_1_1_1");
					put(grammarAccess.getNodeDefinitionAccess().getDefaultTypeAssignment_3_1(), "rule__NodeDefinition__DefaultTypeAssignment_3_1");
					put(grammarAccess.getNodeDefinitionAccess().getAutocreatedAssignment_4_0(), "rule__NodeDefinition__AutocreatedAssignment_4_0");
					put(grammarAccess.getNodeDefinitionAccess().getManadatoryAssignment_4_1(), "rule__NodeDefinition__ManadatoryAssignment_4_1");
					put(grammarAccess.getNodeDefinitionAccess().getProtectedAssignment_4_2(), "rule__NodeDefinition__ProtectedAssignment_4_2");
					put(grammarAccess.getNodeDefinitionAccess().getOnParentVersionAssignment_4_3(), "rule__NodeDefinition__OnParentVersionAssignment_4_3");
					put(grammarAccess.getNodeDefinitionAccess().getSameNameSiblingsAssignment_4_4(), "rule__NodeDefinition__SameNameSiblingsAssignment_4_4");
					put(grammarAccess.getPropertyDefinitionAccess().getNameAssignment_2_0(), "rule__PropertyDefinition__NameAssignment_2_0");
					put(grammarAccess.getPropertyDefinitionAccess().getTypeAssignment_3_1(), "rule__PropertyDefinition__TypeAssignment_3_1");
					put(grammarAccess.getPropertyDefinitionAccess().getDefaultValuesAssignment_4_1_0(), "rule__PropertyDefinition__DefaultValuesAssignment_4_1_0");
					put(grammarAccess.getPropertyDefinitionAccess().getDefaultValuesAssignment_4_1_1_1(), "rule__PropertyDefinition__DefaultValuesAssignment_4_1_1_1");
					put(grammarAccess.getPropertyDefinitionAccess().getAutocreatedAssignment_5_0(), "rule__PropertyDefinition__AutocreatedAssignment_5_0");
					put(grammarAccess.getPropertyDefinitionAccess().getMandatoryAssignment_5_1(), "rule__PropertyDefinition__MandatoryAssignment_5_1");
					put(grammarAccess.getPropertyDefinitionAccess().getProtectedAssignment_5_2(), "rule__PropertyDefinition__ProtectedAssignment_5_2");
					put(grammarAccess.getPropertyDefinitionAccess().getOnParentVersionAssignment_5_3(), "rule__PropertyDefinition__OnParentVersionAssignment_5_3");
					put(grammarAccess.getPropertyDefinitionAccess().getMultipleAssignment_5_4(), "rule__PropertyDefinition__MultipleAssignment_5_4");
					put(grammarAccess.getPropertyDefinitionAccess().getQueryOpsAssignment_5_5(), "rule__PropertyDefinition__QueryOpsAssignment_5_5");
					put(grammarAccess.getPropertyDefinitionAccess().getNoFullTextAssignment_5_6(), "rule__PropertyDefinition__NoFullTextAssignment_5_6");
					put(grammarAccess.getPropertyDefinitionAccess().getNoQueryOrderAssignment_5_7(), "rule__PropertyDefinition__NoQueryOrderAssignment_5_7");
					put(grammarAccess.getPropertyDefinitionAccess().getPrimaryAssignment_5_8(), "rule__PropertyDefinition__PrimaryAssignment_5_8");
					put(grammarAccess.getPropertyDefinitionAccess().getValueConstraintsAssignment_6_1_0(), "rule__PropertyDefinition__ValueConstraintsAssignment_6_1_0");
					put(grammarAccess.getPropertyDefinitionAccess().getValueConstraintsAssignment_6_1_1_1(), "rule__PropertyDefinition__ValueConstraintsAssignment_6_1_1_1");
					put(grammarAccess.getNsMappingAccess().getNameAssignment_1(), "rule__NsMapping__NameAssignment_1");
					put(grammarAccess.getNsMappingAccess().getUriAssignment_3(), "rule__NsMapping__UriAssignment_3");
					put(grammarAccess.getNodeTypeDefinitionAccess().getUnorderedGroup_4(), "rule__NodeTypeDefinition__UnorderedGroup_4");
					put(grammarAccess.getNodeDefinitionAccess().getUnorderedGroup_4(), "rule__NodeDefinition__UnorderedGroup_4");
					put(grammarAccess.getPropertyDefinitionAccess().getUnorderedGroup_5(), "rule__PropertyDefinition__UnorderedGroup_5");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.github.evra.jcr.ui.contentassist.antlr.internal.InternalCndParser typedParser = (com.github.evra.jcr.ui.contentassist.antlr.internal.InternalCndParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public CndGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(CndGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
