/*
* generated by Xtext
*/
grammar InternalCnd;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.github.evra.jcr.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.github.evra.jcr.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.github.evra.jcr.services.CndGrammarAccess;

}

@parser::members {
 
 	private CndGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CndGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAlternatives()); }
(rule__Model__Alternatives)*
{ after(grammarAccess.getModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeTypeDef
entryRuleNodeTypeDef 
:
{ before(grammarAccess.getNodeTypeDefRule()); }
	 ruleNodeTypeDef
{ after(grammarAccess.getNodeTypeDefRule()); } 
	 EOF 
;

// Rule NodeTypeDef
ruleNodeTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeTypeDefAccess().getGroup()); }
(rule__NodeTypeDef__Group__0)
{ after(grammarAccess.getNodeTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChildNodeDef
entryRuleChildNodeDef 
:
{ before(grammarAccess.getChildNodeDefRule()); }
	 ruleChildNodeDef
{ after(grammarAccess.getChildNodeDefRule()); } 
	 EOF 
;

// Rule ChildNodeDef
ruleChildNodeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChildNodeDefAccess().getGroup()); }
(rule__ChildNodeDef__Group__0)
{ after(grammarAccess.getChildNodeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeAttribute
entryRuleNodeAttribute 
:
{ before(grammarAccess.getNodeAttributeRule()); }
	 ruleNodeAttribute
{ after(grammarAccess.getNodeAttributeRule()); } 
	 EOF 
;

// Rule NodeAttribute
ruleNodeAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeAttributeAccess().getAlternatives()); }
(rule__NodeAttribute__Alternatives)
{ after(grammarAccess.getNodeAttributeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSns
entryRuleSns 
:
{ before(grammarAccess.getSnsRule()); }
	 ruleSns
{ after(grammarAccess.getSnsRule()); } 
	 EOF 
;

// Rule Sns
ruleSns
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSnsAccess().getGroup()); }
(rule__Sns__Group__0)
{ after(grammarAccess.getSnsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefaultType
entryRuleDefaultType 
:
{ before(grammarAccess.getDefaultTypeRule()); }
	 ruleDefaultType
{ after(grammarAccess.getDefaultTypeRule()); } 
	 EOF 
;

// Rule DefaultType
ruleDefaultType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefaultTypeAccess().getGroup()); }
(rule__DefaultType__Group__0)
{ after(grammarAccess.getDefaultTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequiredTypes
entryRuleRequiredTypes 
:
{ before(grammarAccess.getRequiredTypesRule()); }
	 ruleRequiredTypes
{ after(grammarAccess.getRequiredTypesRule()); } 
	 EOF 
;

// Rule RequiredTypes
ruleRequiredTypes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequiredTypesAccess().getGroup()); }
(rule__RequiredTypes__Group__0)
{ after(grammarAccess.getRequiredTypesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeName
entryRuleNodeName 
:
{ before(grammarAccess.getNodeNameRule()); }
	 ruleNodeName
{ after(grammarAccess.getNodeNameRule()); } 
	 EOF 
;

// Rule NodeName
ruleNodeName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeNameAccess().getGroup()); }
(rule__NodeName__Group__0)
{ after(grammarAccess.getNodeNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyDef
entryRulePropertyDef 
:
{ before(grammarAccess.getPropertyDefRule()); }
	 rulePropertyDef
{ after(grammarAccess.getPropertyDefRule()); } 
	 EOF 
;

// Rule PropertyDef
rulePropertyDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyDefAccess().getGroup()); }
(rule__PropertyDef__Group__0)
{ after(grammarAccess.getPropertyDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueConstraints
entryRuleValueConstraints 
:
{ before(grammarAccess.getValueConstraintsRule()); }
	 ruleValueConstraints
{ after(grammarAccess.getValueConstraintsRule()); } 
	 EOF 
;

// Rule ValueConstraints
ruleValueConstraints
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueConstraintsAccess().getGroup()); }
(rule__ValueConstraints__Group__0)
{ after(grammarAccess.getValueConstraintsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyAttribute
entryRulePropertyAttribute 
:
{ before(grammarAccess.getPropertyAttributeRule()); }
	 rulePropertyAttribute
{ after(grammarAccess.getPropertyAttributeRule()); } 
	 EOF 
;

// Rule PropertyAttribute
rulePropertyAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAttributeAccess().getAlternatives()); }
(rule__PropertyAttribute__Alternatives)
{ after(grammarAccess.getPropertyAttributeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoQueryOrder
entryRuleNoQueryOrder 
:
{ before(grammarAccess.getNoQueryOrderRule()); }
	 ruleNoQueryOrder
{ after(grammarAccess.getNoQueryOrderRule()); } 
	 EOF 
;

// Rule NoQueryOrder
ruleNoQueryOrder
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoQueryOrderAccess().getGroup()); }
(rule__NoQueryOrder__Group__0)
{ after(grammarAccess.getNoQueryOrderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoFullText
entryRuleNoFullText 
:
{ before(grammarAccess.getNoFullTextRule()); }
	 ruleNoFullText
{ after(grammarAccess.getNoFullTextRule()); } 
	 EOF 
;

// Rule NoFullText
ruleNoFullText
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoFullTextAccess().getGroup()); }
(rule__NoFullText__Group__0)
{ after(grammarAccess.getNoFullTextAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQueryOps
entryRuleQueryOps 
:
{ before(grammarAccess.getQueryOpsRule()); }
	 ruleQueryOps
{ after(grammarAccess.getQueryOpsRule()); } 
	 EOF 
;

// Rule QueryOps
ruleQueryOps
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQueryOpsAccess().getGroup()); }
(rule__QueryOps__Group__0)
{ after(grammarAccess.getQueryOpsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiple
entryRuleMultiple 
:
{ before(grammarAccess.getMultipleRule()); }
	 ruleMultiple
{ after(grammarAccess.getMultipleRule()); } 
	 EOF 
;

// Rule Multiple
ruleMultiple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultipleAccess().getGroup()); }
(rule__Multiple__Group__0)
{ after(grammarAccess.getMultipleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpv
entryRuleOpv 
:
{ before(grammarAccess.getOpvRule()); }
	 ruleOpv
{ after(grammarAccess.getOpvRule()); } 
	 EOF 
;

// Rule Opv
ruleOpv
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpvAccess().getAlternatives()); }
(rule__Opv__Alternatives)
{ after(grammarAccess.getOpvAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProtected
entryRuleProtected 
:
{ before(grammarAccess.getProtectedRule()); }
	 ruleProtected
{ after(grammarAccess.getProtectedRule()); } 
	 EOF 
;

// Rule Protected
ruleProtected
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProtectedAccess().getGroup()); }
(rule__Protected__Group__0)
{ after(grammarAccess.getProtectedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMandatory
entryRuleMandatory 
:
{ before(grammarAccess.getMandatoryRule()); }
	 ruleMandatory
{ after(grammarAccess.getMandatoryRule()); } 
	 EOF 
;

// Rule Mandatory
ruleMandatory
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMandatoryAccess().getGroup()); }
(rule__Mandatory__Group__0)
{ after(grammarAccess.getMandatoryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAutocreated
entryRuleAutocreated 
:
{ before(grammarAccess.getAutocreatedRule()); }
	 ruleAutocreated
{ after(grammarAccess.getAutocreatedRule()); } 
	 EOF 
;

// Rule Autocreated
ruleAutocreated
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAutocreatedAccess().getGroup()); }
(rule__Autocreated__Group__0)
{ after(grammarAccess.getAutocreatedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimary
entryRulePrimary 
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
(rule__Primary__Alternatives)
{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefaultValues
entryRuleDefaultValues 
:
{ before(grammarAccess.getDefaultValuesRule()); }
	 ruleDefaultValues
{ after(grammarAccess.getDefaultValuesRule()); } 
	 EOF 
;

// Rule DefaultValues
ruleDefaultValues
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefaultValuesAccess().getGroup()); }
(rule__DefaultValues__Group__0)
{ after(grammarAccess.getDefaultValuesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyType
entryRulePropertyType 
:
{ before(grammarAccess.getPropertyTypeRule()); }
	 rulePropertyType
{ after(grammarAccess.getPropertyTypeRule()); } 
	 EOF 
;

// Rule PropertyType
rulePropertyType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyTypeAccess().getGroup()); }
(rule__PropertyType__Group__0)
{ after(grammarAccess.getPropertyTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyName
entryRulePropertyName 
:
{ before(grammarAccess.getPropertyNameRule()); }
	 rulePropertyName
{ after(grammarAccess.getPropertyNameRule()); } 
	 EOF 
;

// Rule PropertyName
rulePropertyName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyNameAccess().getGroup()); }
(rule__PropertyName__Group__0)
{ after(grammarAccess.getPropertyNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeTypeAttribute
entryRuleNodeTypeAttribute 
:
{ before(grammarAccess.getNodeTypeAttributeRule()); }
	 ruleNodeTypeAttribute
{ after(grammarAccess.getNodeTypeAttributeRule()); } 
	 EOF 
;

// Rule NodeTypeAttribute
ruleNodeTypeAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeTypeAttributeAccess().getAlternatives()); }
(rule__NodeTypeAttribute__Alternatives)
{ after(grammarAccess.getNodeTypeAttributeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryItem
entryRulePrimaryItem 
:
{ before(grammarAccess.getPrimaryItemRule()); }
	 rulePrimaryItem
{ after(grammarAccess.getPrimaryItemRule()); } 
	 EOF 
;

// Rule PrimaryItem
rulePrimaryItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryItemAccess().getGroup()); }
(rule__PrimaryItem__Group__0)
{ after(grammarAccess.getPrimaryItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuery
entryRuleQuery 
:
{ before(grammarAccess.getQueryRule()); }
	 ruleQuery
{ after(grammarAccess.getQueryRule()); } 
	 EOF 
;

// Rule Query
ruleQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQueryAccess().getAlternatives()); }
(rule__Query__Alternatives)
{ after(grammarAccess.getQueryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstract
entryRuleAbstract 
:
{ before(grammarAccess.getAbstractRule()); }
	 ruleAbstract
{ after(grammarAccess.getAbstractRule()); } 
	 EOF 
;

// Rule Abstract
ruleAbstract
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractAccess().getGroup()); }
(rule__Abstract__Group__0)
{ after(grammarAccess.getAbstractAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMixin
entryRuleMixin 
:
{ before(grammarAccess.getMixinRule()); }
	 ruleMixin
{ after(grammarAccess.getMixinRule()); } 
	 EOF 
;

// Rule Mixin
ruleMixin
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMixinAccess().getGroup()); }
(rule__Mixin__Group__0)
{ after(grammarAccess.getMixinAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrderable
entryRuleOrderable 
:
{ before(grammarAccess.getOrderableRule()); }
	 ruleOrderable
{ after(grammarAccess.getOrderableRule()); } 
	 EOF 
;

// Rule Orderable
ruleOrderable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrderableAccess().getGroup()); }
(rule__Orderable__Group__0)
{ after(grammarAccess.getOrderableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuperTypes
entryRuleSuperTypes 
:
{ before(grammarAccess.getSuperTypesRule()); }
	 ruleSuperTypes
{ after(grammarAccess.getSuperTypesRule()); } 
	 EOF 
;

// Rule SuperTypes
ruleSuperTypes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuperTypesAccess().getGroup()); }
(rule__SuperTypes__Group__0)
{ after(grammarAccess.getSuperTypesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeTypeName
entryRuleNodeTypeName 
:
{ before(grammarAccess.getNodeTypeNameRule()); }
	 ruleNodeTypeName
{ after(grammarAccess.getNodeTypeNameRule()); } 
	 EOF 
;

// Rule NodeTypeName
ruleNodeTypeName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeTypeNameAccess().getGroup()); }
(rule__NodeTypeName__Group__0)
{ after(grammarAccess.getNodeTypeNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNsMapping
entryRuleNsMapping 
:
{ before(grammarAccess.getNsMappingRule()); }
	 ruleNsMapping
{ after(grammarAccess.getNsMappingRule()); } 
	 EOF 
;

// Rule NsMapping
ruleNsMapping
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNsMappingAccess().getGroup()); }
(rule__NsMapping__Group__0)
{ after(grammarAccess.getNsMappingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefix
entryRulePrefix 
:
{ before(grammarAccess.getPrefixRule()); }
	 rulePrefix
{ after(grammarAccess.getPrefixRule()); } 
	 EOF 
;

// Rule Prefix
rulePrefix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixAccess().getXiDParserRuleCall()); }
	ruleXiD
{ after(grammarAccess.getPrefixAccess().getXiDParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUri
entryRuleUri 
:
{ before(grammarAccess.getUriRule()); }
	 ruleUri
{ after(grammarAccess.getUriRule()); } 
	 EOF 
;

// Rule Uri
ruleUri
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUriAccess().getJcrStringParserRuleCall()); }
	ruleJcrString
{ after(grammarAccess.getUriAccess().getJcrStringParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJcrStringList
entryRuleJcrStringList 
:
{ before(grammarAccess.getJcrStringListRule()); }
	 ruleJcrStringList
{ after(grammarAccess.getJcrStringListRule()); } 
	 EOF 
;

// Rule JcrStringList
ruleJcrStringList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJcrStringListAccess().getGroup()); }
(rule__JcrStringList__Group__0)
{ after(grammarAccess.getJcrStringListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJcrString
entryRuleJcrString 
:
{ before(grammarAccess.getJcrStringRule()); }
	 ruleJcrString
{ after(grammarAccess.getJcrStringRule()); } 
	 EOF 
;

// Rule JcrString
ruleJcrString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJcrStringAccess().getAlternatives()); }
(rule__JcrString__Alternatives)
{ after(grammarAccess.getJcrStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXiD
entryRuleXiD 
:
{ before(grammarAccess.getXiDRule()); }
	 ruleXiD
{ after(grammarAccess.getXiDRule()); } 
	 EOF 
;

// Rule XiD
ruleXiD
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXiDAccess().getAlternatives()); }
(rule__XiD__Alternatives)
{ after(grammarAccess.getXiDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMappingsAssignment_0()); }
(rule__Model__MappingsAssignment_0)
{ after(grammarAccess.getModelAccess().getMappingsAssignment_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getNodetypesAssignment_1()); }
(rule__Model__NodetypesAssignment_1)
{ after(grammarAccess.getModelAccess().getNodetypesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeTypeDef__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeTypeDefAccess().getPropertyDefParserRuleCall_3_0()); }
	rulePropertyDef
{ after(grammarAccess.getNodeTypeDefAccess().getPropertyDefParserRuleCall_3_0()); }
)

    |(
{ before(grammarAccess.getNodeTypeDefAccess().getChildNodeDefParserRuleCall_3_1()); }
	ruleChildNodeDef
{ after(grammarAccess.getNodeTypeDefAccess().getChildNodeDefParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAttributeAccess().getAutocreatedParserRuleCall_0()); }
	ruleAutocreated
{ after(grammarAccess.getNodeAttributeAccess().getAutocreatedParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNodeAttributeAccess().getMandatoryParserRuleCall_1()); }
	ruleMandatory
{ after(grammarAccess.getNodeAttributeAccess().getMandatoryParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNodeAttributeAccess().getProtectedParserRuleCall_2()); }
	ruleProtected
{ after(grammarAccess.getNodeAttributeAccess().getProtectedParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNodeAttributeAccess().getOpvParserRuleCall_3()); }
	ruleOpv
{ after(grammarAccess.getNodeAttributeAccess().getOpvParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getNodeAttributeAccess().getSnsParserRuleCall_4()); }
	ruleSns
{ after(grammarAccess.getNodeAttributeAccess().getSnsParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sns__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSnsAccess().getSnsKeyword_0_0()); }

	'sns' 

{ after(grammarAccess.getSnsAccess().getSnsKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getSnsAccess().getAsteriskKeyword_0_1()); }

	'*' 

{ after(grammarAccess.getSnsAccess().getAsteriskKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getSnsAccess().getMultipleKeyword_0_2()); }

	'multiple' 

{ after(grammarAccess.getSnsAccess().getMultipleKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultType__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultTypeAccess().getJcrStringParserRuleCall_1_0()); }
	ruleJcrString
{ after(grammarAccess.getDefaultTypeAccess().getJcrStringParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getDefaultTypeAccess().getQuestionMarkKeyword_1_1()); }

	'?' 

{ after(grammarAccess.getDefaultTypeAccess().getQuestionMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredTypes__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredTypesAccess().getJcrStringListParserRuleCall_1_0()); }
	ruleJcrStringList
{ after(grammarAccess.getRequiredTypesAccess().getJcrStringListParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getRequiredTypesAccess().getQuestionMarkKeyword_1_1()); }

	'?' 

{ after(grammarAccess.getRequiredTypesAccess().getQuestionMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeName__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeNameAccess().getJcrStringParserRuleCall_1_0()); }
	ruleJcrString
{ after(grammarAccess.getNodeNameAccess().getJcrStringParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getNodeNameAccess().getAsteriskKeyword_1_1()); }

	'*' 

{ after(grammarAccess.getNodeNameAccess().getAsteriskKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueConstraints__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueConstraintsAccess().getJcrStringListParserRuleCall_1_0()); }
	ruleJcrStringList
{ after(grammarAccess.getValueConstraintsAccess().getJcrStringListParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getValueConstraintsAccess().getQuestionMarkKeyword_1_1()); }

	'?' 

{ after(grammarAccess.getValueConstraintsAccess().getQuestionMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAttribute__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAttributeAccess().getAutocreatedParserRuleCall_0()); }
	ruleAutocreated
{ after(grammarAccess.getPropertyAttributeAccess().getAutocreatedParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyAttributeAccess().getMandatoryParserRuleCall_1()); }
	ruleMandatory
{ after(grammarAccess.getPropertyAttributeAccess().getMandatoryParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPropertyAttributeAccess().getProtectedParserRuleCall_2()); }
	ruleProtected
{ after(grammarAccess.getPropertyAttributeAccess().getProtectedParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPropertyAttributeAccess().getOpvParserRuleCall_3()); }
	ruleOpv
{ after(grammarAccess.getPropertyAttributeAccess().getOpvParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPropertyAttributeAccess().getMultipleParserRuleCall_4()); }
	ruleMultiple
{ after(grammarAccess.getPropertyAttributeAccess().getMultipleParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPropertyAttributeAccess().getQueryOpsParserRuleCall_5()); }
	ruleQueryOps
{ after(grammarAccess.getPropertyAttributeAccess().getQueryOpsParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPropertyAttributeAccess().getNoFullTextParserRuleCall_6()); }
	ruleNoFullText
{ after(grammarAccess.getPropertyAttributeAccess().getNoFullTextParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getPropertyAttributeAccess().getNoQueryOrderParserRuleCall_7()); }
	ruleNoQueryOrder
{ after(grammarAccess.getPropertyAttributeAccess().getNoQueryOrderParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getPropertyAttributeAccess().getPrimaryParserRuleCall_8()); }
	rulePrimary
{ after(grammarAccess.getPropertyAttributeAccess().getPrimaryParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoQueryOrder__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoQueryOrderAccess().getNoqueryorderKeyword_0_0()); }

	'noqueryorder' 

{ after(grammarAccess.getNoQueryOrderAccess().getNoqueryorderKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getNoQueryOrderAccess().getNqordKeyword_0_1()); }

	'nqord' 

{ after(grammarAccess.getNoQueryOrderAccess().getNqordKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoFullText__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoFullTextAccess().getNofulltextKeyword_0_0()); }

	'nofulltext' 

{ after(grammarAccess.getNoFullTextAccess().getNofulltextKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getNoFullTextAccess().getNofKeyword_0_1()); }

	'nof' 

{ after(grammarAccess.getNoFullTextAccess().getNofKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOps__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryOpsAccess().getQueryopsKeyword_0_0()); }

	'queryops' 

{ after(grammarAccess.getQueryOpsAccess().getQueryopsKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getQueryOpsAccess().getQopKeyword_0_1()); }

	'qop' 

{ after(grammarAccess.getQueryOpsAccess().getQopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOps__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryOpsAccess().getJcrStringParserRuleCall_1_0()); }
	ruleJcrString
{ after(grammarAccess.getQueryOpsAccess().getJcrStringParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getQueryOpsAccess().getQuestionMarkKeyword_1_1()); }

	'?' 

{ after(grammarAccess.getQueryOpsAccess().getQuestionMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiple__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleAccess().getMultipleKeyword_0_0()); }

	'multiple' 

{ after(grammarAccess.getMultipleAccess().getMultipleKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getMultipleAccess().getMulKeyword_0_1()); }

	'mul' 

{ after(grammarAccess.getMultipleAccess().getMulKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getMultipleAccess().getAsteriskKeyword_0_2()); }

	'*' 

{ after(grammarAccess.getMultipleAccess().getAsteriskKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Opv__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpvAccess().getCOPYKeyword_0()); }

	'COPY' 

{ after(grammarAccess.getOpvAccess().getCOPYKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpvAccess().getVERSIONKeyword_1()); }

	'VERSION' 

{ after(grammarAccess.getOpvAccess().getVERSIONKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpvAccess().getINITIALIZEKeyword_2()); }

	'INITIALIZE' 

{ after(grammarAccess.getOpvAccess().getINITIALIZEKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpvAccess().getCOMPUTEKeyword_3()); }

	'COMPUTE' 

{ after(grammarAccess.getOpvAccess().getCOMPUTEKeyword_3()); }
)

    |(
{ before(grammarAccess.getOpvAccess().getIGNOREKeyword_4()); }

	'IGNORE' 

{ after(grammarAccess.getOpvAccess().getIGNOREKeyword_4()); }
)

    |(
{ before(grammarAccess.getOpvAccess().getABORTKeyword_5()); }

	'ABORT' 

{ after(grammarAccess.getOpvAccess().getABORTKeyword_5()); }
)

    |(
{ before(grammarAccess.getOpvAccess().getGroup_6()); }
(rule__Opv__Group_6__0)
{ after(grammarAccess.getOpvAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Protected__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtectedAccess().getProtectedKeyword_0_0()); }

	'protected' 

{ after(grammarAccess.getProtectedAccess().getProtectedKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getProtectedAccess().getProKeyword_0_1()); }

	'pro' 

{ after(grammarAccess.getProtectedAccess().getProKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getProtectedAccess().getPKeyword_0_2()); }

	'p' 

{ after(grammarAccess.getProtectedAccess().getPKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mandatory__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryAccess().getMandatoryKeyword_0_0()); }

	'mandatory' 

{ after(grammarAccess.getMandatoryAccess().getMandatoryKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getMandatoryAccess().getManKeyword_0_1()); }

	'man' 

{ after(grammarAccess.getMandatoryAccess().getManKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getMandatoryAccess().getMKeyword_0_2()); }

	'm' 

{ after(grammarAccess.getMandatoryAccess().getMKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Autocreated__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAutocreatedAccess().getAutocreatedKeyword_0_0()); }

	'autocreated' 

{ after(grammarAccess.getAutocreatedAccess().getAutocreatedKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getAutocreatedAccess().getAutKeyword_0_1()); }

	'aut' 

{ after(grammarAccess.getAutocreatedAccess().getAutKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getAutocreatedAccess().getAKeyword_0_2()); }

	'a' 

{ after(grammarAccess.getAutocreatedAccess().getAKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getPrimaryKeyword_0()); }

	'primary' 

{ after(grammarAccess.getPrimaryAccess().getPrimaryKeyword_0()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1()); }

	'!' 

{ after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValues__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValuesAccess().getJcrStringListParserRuleCall_1_0()); }
	ruleJcrStringList
{ after(grammarAccess.getDefaultValuesAccess().getJcrStringListParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getDefaultValuesAccess().getQuestionMarkKeyword_1_1()); }

	'?' 

{ after(grammarAccess.getDefaultValuesAccess().getQuestionMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyTypeAccess().getSTRINGKeyword_1_0()); }

	'STRING' 

{ after(grammarAccess.getPropertyTypeAccess().getSTRINGKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getPropertyTypeAccess().getBINARYKeyword_1_1()); }

	'BINARY' 

{ after(grammarAccess.getPropertyTypeAccess().getBINARYKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getPropertyTypeAccess().getLONGKeyword_1_2()); }

	'LONG' 

{ after(grammarAccess.getPropertyTypeAccess().getLONGKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getPropertyTypeAccess().getDOUBLEKeyword_1_3()); }

	'DOUBLE' 

{ after(grammarAccess.getPropertyTypeAccess().getDOUBLEKeyword_1_3()); }
)

    |(
{ before(grammarAccess.getPropertyTypeAccess().getBOOLEANKeyword_1_4()); }

	'BOOLEAN' 

{ after(grammarAccess.getPropertyTypeAccess().getBOOLEANKeyword_1_4()); }
)

    |(
{ before(grammarAccess.getPropertyTypeAccess().getDATEKeyword_1_5()); }

	'DATE' 

{ after(grammarAccess.getPropertyTypeAccess().getDATEKeyword_1_5()); }
)

    |(
{ before(grammarAccess.getPropertyTypeAccess().getNAMEKeyword_1_6()); }

	'NAME' 

{ after(grammarAccess.getPropertyTypeAccess().getNAMEKeyword_1_6()); }
)

    |(
{ before(grammarAccess.getPropertyTypeAccess().getPATHKeyword_1_7()); }

	'PATH' 

{ after(grammarAccess.getPropertyTypeAccess().getPATHKeyword_1_7()); }
)

    |(
{ before(grammarAccess.getPropertyTypeAccess().getREFERENCEKeyword_1_8()); }

	'REFERENCE' 

{ after(grammarAccess.getPropertyTypeAccess().getREFERENCEKeyword_1_8()); }
)

    |(
{ before(grammarAccess.getPropertyTypeAccess().getWEAKREFERENCEKeyword_1_9()); }

	'WEAKREFERENCE' 

{ after(grammarAccess.getPropertyTypeAccess().getWEAKREFERENCEKeyword_1_9()); }
)

    |(
{ before(grammarAccess.getPropertyTypeAccess().getDECIMALKeyword_1_10()); }

	'DECIMAL' 

{ after(grammarAccess.getPropertyTypeAccess().getDECIMALKeyword_1_10()); }
)

    |(
{ before(grammarAccess.getPropertyTypeAccess().getURIKeyword_1_11()); }

	'URI' 

{ after(grammarAccess.getPropertyTypeAccess().getURIKeyword_1_11()); }
)

    |(
{ before(grammarAccess.getPropertyTypeAccess().getUNDEFINEDKeyword_1_12()); }

	'UNDEFINED' 

{ after(grammarAccess.getPropertyTypeAccess().getUNDEFINEDKeyword_1_12()); }
)

    |(
{ before(grammarAccess.getPropertyTypeAccess().getAsteriskKeyword_1_13()); }

	'*' 

{ after(grammarAccess.getPropertyTypeAccess().getAsteriskKeyword_1_13()); }
)

    |(
{ before(grammarAccess.getPropertyTypeAccess().getQuestionMarkKeyword_1_14()); }

	'?' 

{ after(grammarAccess.getPropertyTypeAccess().getQuestionMarkKeyword_1_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyNameAccess().getJcrStringParserRuleCall_1_0()); }
	ruleJcrString
{ after(grammarAccess.getPropertyNameAccess().getJcrStringParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getPropertyNameAccess().getAsteriskKeyword_1_1()); }

	'*' 

{ after(grammarAccess.getPropertyNameAccess().getAsteriskKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeTypeAttribute__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeTypeAttributeAccess().getOrderableParserRuleCall_0()); }
	ruleOrderable
{ after(grammarAccess.getNodeTypeAttributeAccess().getOrderableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNodeTypeAttributeAccess().getMixinParserRuleCall_1()); }
	ruleMixin
{ after(grammarAccess.getNodeTypeAttributeAccess().getMixinParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNodeTypeAttributeAccess().getAbstractParserRuleCall_2()); }
	ruleAbstract
{ after(grammarAccess.getNodeTypeAttributeAccess().getAbstractParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNodeTypeAttributeAccess().getQueryParserRuleCall_3()); }
	ruleQuery
{ after(grammarAccess.getNodeTypeAttributeAccess().getQueryParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getNodeTypeAttributeAccess().getPrimaryItemParserRuleCall_4()); }
	rulePrimaryItem
{ after(grammarAccess.getNodeTypeAttributeAccess().getPrimaryItemParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryItem__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryItemAccess().getPrimaryitemKeyword_0_0()); }

	'primaryitem' 

{ after(grammarAccess.getPrimaryItemAccess().getPrimaryitemKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getPrimaryItemAccess().getExclamationMarkKeyword_0_1()); }

	'!' 

{ after(grammarAccess.getPrimaryItemAccess().getExclamationMarkKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryItem__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryItemAccess().getJcrStringParserRuleCall_1_0()); }
	ruleJcrString
{ after(grammarAccess.getPrimaryItemAccess().getJcrStringParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getPrimaryItemAccess().getQuestionMarkKeyword_1_1()); }

	'?' 

{ after(grammarAccess.getPrimaryItemAccess().getQuestionMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryAccess().getAlternatives_0()); }
(rule__Query__Alternatives_0)
{ after(grammarAccess.getQueryAccess().getAlternatives_0()); }
)

    |(
{ before(grammarAccess.getQueryAccess().getAlternatives_1()); }
(rule__Query__Alternatives_1)
{ after(grammarAccess.getQueryAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryAccess().getNoqueryKeyword_0_0()); }

	'noquery' 

{ after(grammarAccess.getQueryAccess().getNoqueryKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getQueryAccess().getNqKeyword_0_1()); }

	'nq' 

{ after(grammarAccess.getQueryAccess().getNqKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryAccess().getQueryKeyword_1_0()); }

	'query' 

{ after(grammarAccess.getQueryAccess().getQueryKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getQueryAccess().getQKeyword_1_1()); }

	'q' 

{ after(grammarAccess.getQueryAccess().getQKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abstract__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractAccess().getAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getAbstractAccess().getAbstractKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getAbstractAccess().getAbsKeyword_0_1()); }

	'abs' 

{ after(grammarAccess.getAbstractAccess().getAbsKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getAbstractAccess().getAKeyword_0_2()); }

	'a' 

{ after(grammarAccess.getAbstractAccess().getAKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mixin__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMixinAccess().getMixinKeyword_0_0()); }

	'mixin' 

{ after(grammarAccess.getMixinAccess().getMixinKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getMixinAccess().getMixKeyword_0_1()); }

	'mix' 

{ after(grammarAccess.getMixinAccess().getMixKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getMixinAccess().getMKeyword_0_2()); }

	'm' 

{ after(grammarAccess.getMixinAccess().getMKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Orderable__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderableAccess().getOrderableKeyword_0_0()); }

	'orderable' 

{ after(grammarAccess.getOrderableAccess().getOrderableKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getOrderableAccess().getOrdKeyword_0_1()); }

	'ord' 

{ after(grammarAccess.getOrderableAccess().getOrdKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getOrderableAccess().getOKeyword_0_2()); }

	'o' 

{ after(grammarAccess.getOrderableAccess().getOKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuperTypes__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperTypesAccess().getJcrStringListParserRuleCall_1_0()); }
	ruleJcrStringList
{ after(grammarAccess.getSuperTypesAccess().getJcrStringListParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getSuperTypesAccess().getQuestionMarkKeyword_1_1()); }

	'?' 

{ after(grammarAccess.getSuperTypesAccess().getQuestionMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JcrString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJcrStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getJcrStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJcrStringAccess().getXiDParserRuleCall_1()); }
	ruleXiD
{ after(grammarAccess.getJcrStringAccess().getXiDParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XiD__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXiDAccess().getEXIDTerminalRuleCall_0()); }
	RULE_EXID
{ after(grammarAccess.getXiDAccess().getEXIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXiDAccess().getMixKeyword_1()); }

	'mix' 

{ after(grammarAccess.getXiDAccess().getMixKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__NodeTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeTypeDef__Group__0__Impl
	rule__NodeTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeTypeDefAccess().getNodeTypeNameParserRuleCall_0()); }
	ruleNodeTypeName
{ after(grammarAccess.getNodeTypeDefAccess().getNodeTypeNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeTypeDef__Group__1__Impl
	rule__NodeTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeTypeDefAccess().getSuperTypesParserRuleCall_1()); }
(	ruleSuperTypes)?
{ after(grammarAccess.getNodeTypeDefAccess().getSuperTypesParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeTypeDef__Group__2__Impl
	rule__NodeTypeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeTypeDefAccess().getAttributesAssignment_2()); }
(rule__NodeTypeDef__AttributesAssignment_2)*
{ after(grammarAccess.getNodeTypeDefAccess().getAttributesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeTypeDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeTypeDef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeTypeDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeTypeDefAccess().getAlternatives_3()); }
(rule__NodeTypeDef__Alternatives_3)*
{ after(grammarAccess.getNodeTypeDefAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ChildNodeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChildNodeDef__Group__0__Impl
	rule__ChildNodeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChildNodeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildNodeDefAccess().getNodeNameParserRuleCall_0()); }
	ruleNodeName
{ after(grammarAccess.getChildNodeDefAccess().getNodeNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChildNodeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChildNodeDef__Group__1__Impl
	rule__ChildNodeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChildNodeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildNodeDefAccess().getRequiredTypesParserRuleCall_1()); }
(	ruleRequiredTypes)?
{ after(grammarAccess.getChildNodeDefAccess().getRequiredTypesParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChildNodeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChildNodeDef__Group__2__Impl
	rule__ChildNodeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChildNodeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildNodeDefAccess().getDefaultTypeParserRuleCall_2()); }
(	ruleDefaultType)?
{ after(grammarAccess.getChildNodeDefAccess().getDefaultTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChildNodeDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChildNodeDef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChildNodeDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildNodeDefAccess().getNodeAttributeParserRuleCall_3()); }
(	ruleNodeAttribute)*
{ after(grammarAccess.getChildNodeDefAccess().getNodeAttributeParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Sns__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sns__Group__0__Impl
	rule__Sns__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sns__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSnsAccess().getAlternatives_0()); }
(rule__Sns__Alternatives_0)
{ after(grammarAccess.getSnsAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sns__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sns__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sns__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSnsAccess().getQuestionMarkKeyword_1()); }
(
	'?' 
)?
{ after(grammarAccess.getSnsAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefaultType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultType__Group__0__Impl
	rule__DefaultType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultTypeAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getDefaultTypeAccess().getEqualsSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultTypeAccess().getAlternatives_1()); }
(rule__DefaultType__Alternatives_1)
{ after(grammarAccess.getDefaultTypeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RequiredTypes__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredTypes__Group__0__Impl
	rule__RequiredTypes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredTypes__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredTypesAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getRequiredTypesAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredTypes__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredTypes__Group__1__Impl
	rule__RequiredTypes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredTypes__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredTypesAccess().getAlternatives_1()); }
(rule__RequiredTypes__Alternatives_1)
{ after(grammarAccess.getRequiredTypesAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredTypes__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredTypes__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredTypes__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredTypesAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getRequiredTypesAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NodeName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeName__Group__0__Impl
	rule__NodeName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeNameAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getNodeNameAccess().getPlusSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeNameAccess().getAlternatives_1()); }
(rule__NodeName__Alternatives_1)
{ after(grammarAccess.getNodeNameAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDef__Group__0__Impl
	rule__PropertyDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefAccess().getPropertyNameParserRuleCall_0()); }
	rulePropertyName
{ after(grammarAccess.getPropertyDefAccess().getPropertyNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDef__Group__1__Impl
	rule__PropertyDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefAccess().getPropertyTypeParserRuleCall_1()); }
(	rulePropertyType)?
{ after(grammarAccess.getPropertyDefAccess().getPropertyTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDef__Group__2__Impl
	rule__PropertyDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefAccess().getDefaultValuesParserRuleCall_2()); }
(	ruleDefaultValues)?
{ after(grammarAccess.getPropertyDefAccess().getDefaultValuesParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDef__Group__3__Impl
	rule__PropertyDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefAccess().getPropertyAttributeParserRuleCall_3()); }
(	rulePropertyAttribute)*
{ after(grammarAccess.getPropertyDefAccess().getPropertyAttributeParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefAccess().getValueConstraintsParserRuleCall_4()); }
(	ruleValueConstraints)?
{ after(grammarAccess.getPropertyDefAccess().getValueConstraintsParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ValueConstraints__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueConstraints__Group__0__Impl
	rule__ValueConstraints__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueConstraints__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueConstraintsAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getValueConstraintsAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueConstraints__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueConstraints__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueConstraints__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueConstraintsAccess().getAlternatives_1()); }
(rule__ValueConstraints__Alternatives_1)
{ after(grammarAccess.getValueConstraintsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NoQueryOrder__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoQueryOrder__Group__0__Impl
	rule__NoQueryOrder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoQueryOrder__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoQueryOrderAccess().getAlternatives_0()); }
(rule__NoQueryOrder__Alternatives_0)
{ after(grammarAccess.getNoQueryOrderAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NoQueryOrder__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoQueryOrder__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoQueryOrder__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoQueryOrderAccess().getQuestionMarkKeyword_1()); }
(
	'?' 
)?
{ after(grammarAccess.getNoQueryOrderAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NoFullText__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoFullText__Group__0__Impl
	rule__NoFullText__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoFullText__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoFullTextAccess().getAlternatives_0()); }
(rule__NoFullText__Alternatives_0)
{ after(grammarAccess.getNoFullTextAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NoFullText__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoFullText__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoFullText__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoFullTextAccess().getQuestionMarkKeyword_1()); }
(
	'?' 
)?
{ after(grammarAccess.getNoFullTextAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QueryOps__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryOps__Group__0__Impl
	rule__QueryOps__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOps__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryOpsAccess().getAlternatives_0()); }
(rule__QueryOps__Alternatives_0)
{ after(grammarAccess.getQueryOpsAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryOps__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryOps__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryOps__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryOpsAccess().getAlternatives_1()); }
(rule__QueryOps__Alternatives_1)
{ after(grammarAccess.getQueryOpsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiple__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiple__Group__0__Impl
	rule__Multiple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiple__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleAccess().getAlternatives_0()); }
(rule__Multiple__Alternatives_0)
{ after(grammarAccess.getMultipleAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiple__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiple__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiple__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleAccess().getQuestionMarkKeyword_1()); }
(
	'?' 
)?
{ after(grammarAccess.getMultipleAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Opv__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Opv__Group_6__0__Impl
	rule__Opv__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Opv__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpvAccess().getOPVKeyword_6_0()); }

	'OPV' 

{ after(grammarAccess.getOpvAccess().getOPVKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Opv__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Opv__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Opv__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpvAccess().getQuestionMarkKeyword_6_1()); }

	'?' 

{ after(grammarAccess.getOpvAccess().getQuestionMarkKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Protected__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Protected__Group__0__Impl
	rule__Protected__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Protected__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtectedAccess().getAlternatives_0()); }
(rule__Protected__Alternatives_0)
{ after(grammarAccess.getProtectedAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Protected__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Protected__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Protected__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtectedAccess().getQuestionMarkKeyword_1()); }
(
	'?' 
)?
{ after(grammarAccess.getProtectedAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Mandatory__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mandatory__Group__0__Impl
	rule__Mandatory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mandatory__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryAccess().getAlternatives_0()); }
(rule__Mandatory__Alternatives_0)
{ after(grammarAccess.getMandatoryAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mandatory__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mandatory__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mandatory__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryAccess().getQuestionMarkKeyword_1()); }
(
	'?' 
)?
{ after(grammarAccess.getMandatoryAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Autocreated__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Autocreated__Group__0__Impl
	rule__Autocreated__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Autocreated__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAutocreatedAccess().getAlternatives_0()); }
(rule__Autocreated__Alternatives_0)
{ after(grammarAccess.getAutocreatedAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Autocreated__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Autocreated__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Autocreated__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAutocreatedAccess().getQuestionMarkKeyword_1()); }
(
	'?' 
)?
{ after(grammarAccess.getAutocreatedAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefaultValues__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValues__Group__0__Impl
	rule__DefaultValues__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValues__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValuesAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getDefaultValuesAccess().getEqualsSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValues__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValues__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValues__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValuesAccess().getAlternatives_1()); }
(rule__DefaultValues__Alternatives_1)
{ after(grammarAccess.getDefaultValuesAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyType__Group__0__Impl
	rule__PropertyType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyTypeAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getPropertyTypeAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyType__Group__1__Impl
	rule__PropertyType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyTypeAccess().getAlternatives_1()); }
(rule__PropertyType__Alternatives_1)
{ after(grammarAccess.getPropertyTypeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyTypeAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getPropertyTypeAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PropertyName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyName__Group__0__Impl
	rule__PropertyName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyNameAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getPropertyNameAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyNameAccess().getAlternatives_1()); }
(rule__PropertyName__Alternatives_1)
{ after(grammarAccess.getPropertyNameAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryItem__Group__0__Impl
	rule__PrimaryItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryItemAccess().getAlternatives_0()); }
(rule__PrimaryItem__Alternatives_0)
{ after(grammarAccess.getPrimaryItemAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryItem__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryItemAccess().getAlternatives_1()); }
(rule__PrimaryItem__Alternatives_1)
{ after(grammarAccess.getPrimaryItemAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Abstract__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abstract__Group__0__Impl
	rule__Abstract__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstract__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractAccess().getAlternatives_0()); }
(rule__Abstract__Alternatives_0)
{ after(grammarAccess.getAbstractAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abstract__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abstract__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstract__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractAccess().getQuestionMarkKeyword_1()); }
(
	'?' 
)?
{ after(grammarAccess.getAbstractAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Mixin__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mixin__Group__0__Impl
	rule__Mixin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mixin__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMixinAccess().getAlternatives_0()); }
(rule__Mixin__Alternatives_0)
{ after(grammarAccess.getMixinAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mixin__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mixin__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mixin__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMixinAccess().getQuestionMarkKeyword_1()); }
(
	'?' 
)?
{ after(grammarAccess.getMixinAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Orderable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Orderable__Group__0__Impl
	rule__Orderable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Orderable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderableAccess().getAlternatives_0()); }
(rule__Orderable__Alternatives_0)
{ after(grammarAccess.getOrderableAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Orderable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Orderable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Orderable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderableAccess().getQuestionMarkKeyword_1()); }
(
	'?' 
)?
{ after(grammarAccess.getOrderableAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuperTypes__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperTypes__Group__0__Impl
	rule__SuperTypes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperTypes__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperTypesAccess().getGreaterThanSignKeyword_0()); }

	'>' 

{ after(grammarAccess.getSuperTypesAccess().getGreaterThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuperTypes__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperTypes__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperTypes__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperTypesAccess().getAlternatives_1()); }
(rule__SuperTypes__Alternatives_1)
{ after(grammarAccess.getSuperTypesAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NodeTypeName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeTypeName__Group__0__Impl
	rule__NodeTypeName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeTypeName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeTypeNameAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getNodeTypeNameAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeTypeName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeTypeName__Group__1__Impl
	rule__NodeTypeName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeTypeName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeTypeNameAccess().getNameAssignment_1()); }
(rule__NodeTypeName__NameAssignment_1)
{ after(grammarAccess.getNodeTypeNameAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeTypeName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeTypeName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeTypeName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeTypeNameAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getNodeTypeNameAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NsMapping__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NsMapping__Group__0__Impl
	rule__NsMapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NsMapping__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNsMappingAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getNsMappingAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NsMapping__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NsMapping__Group__1__Impl
	rule__NsMapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NsMapping__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNsMappingAccess().getNameAssignment_1()); }
(rule__NsMapping__NameAssignment_1)
{ after(grammarAccess.getNsMappingAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NsMapping__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NsMapping__Group__2__Impl
	rule__NsMapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NsMapping__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNsMappingAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getNsMappingAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NsMapping__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NsMapping__Group__3__Impl
	rule__NsMapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NsMapping__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNsMappingAccess().getUriAssignment_3()); }
(rule__NsMapping__UriAssignment_3)
{ after(grammarAccess.getNsMappingAccess().getUriAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NsMapping__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NsMapping__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NsMapping__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNsMappingAccess().getGreaterThanSignKeyword_4()); }

	'>' 

{ after(grammarAccess.getNsMappingAccess().getGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__JcrStringList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JcrStringList__Group__0__Impl
	rule__JcrStringList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JcrStringList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJcrStringListAccess().getJcrStringParserRuleCall_0()); }
	ruleJcrString
{ after(grammarAccess.getJcrStringListAccess().getJcrStringParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JcrStringList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JcrStringList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JcrStringList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJcrStringListAccess().getGroup_1()); }
(rule__JcrStringList__Group_1__0)*
{ after(grammarAccess.getJcrStringListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JcrStringList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JcrStringList__Group_1__0__Impl
	rule__JcrStringList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JcrStringList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJcrStringListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getJcrStringListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JcrStringList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JcrStringList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JcrStringList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJcrStringListAccess().getJcrStringParserRuleCall_1_1()); }
	ruleJcrString
{ after(grammarAccess.getJcrStringListAccess().getJcrStringParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__MappingsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMappingsNsMappingParserRuleCall_0_0()); }
	ruleNsMapping{ after(grammarAccess.getModelAccess().getMappingsNsMappingParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__NodetypesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNodetypesNodeTypeDefParserRuleCall_1_0()); }
	ruleNodeTypeDef{ after(grammarAccess.getModelAccess().getNodetypesNodeTypeDefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeTypeDef__AttributesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeTypeDefAccess().getAttributesNodeTypeAttributeParserRuleCall_2_0()); }
	ruleNodeTypeAttribute{ after(grammarAccess.getNodeTypeDefAccess().getAttributesNodeTypeAttributeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeTypeName__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeTypeNameAccess().getNameJcrStringParserRuleCall_1_0()); }
	ruleJcrString{ after(grammarAccess.getNodeTypeNameAccess().getNameJcrStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NsMapping__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNsMappingAccess().getNamePrefixParserRuleCall_1_0()); }
	rulePrefix{ after(grammarAccess.getNsMappingAccess().getNamePrefixParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NsMapping__UriAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNsMappingAccess().getUriUriParserRuleCall_3_0()); }
	ruleUri{ after(grammarAccess.getNsMappingAccess().getUriUriParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_EXID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|':'|'*')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


